<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="syh.toyProject.repository.mybatis.CommentMapper">

    <sql id="sorting">
        <choose>
            <when test="sortingDto != null and sortingDto.sorting == 'DESC'">
                ORDER BY writing_date DESC
            </when>
            <otherwise>
                ORDER BY writing_date ASC
            </otherwise>
        </choose>
    </sql>

    <sql id="paging">
        <if test="pageDto != null">
            LIMIT #{pageDto.pageCount}, #{pageDto.pageView}
        </if>
    </sql>


    <insert id="addComment" useGeneratedKeys="true" keyProperty="commentId">
        INSERT INTO comment (post_id, member_id, writing_date, last_edit_date, comment_content)
        VALUES (#{postId}, #{memberId}, now(), now(), #{commentContent})
    </insert>

    <update id="editComment">
        UPDATE comment
        SET comment_content = #{commentEditDto.commentContent}, last_edit_date = now() + 0.00001
        WHERE comment_id = #{commentId}
    </update>

    <select id="totalCount" resultType="int">
        SELECT COUNT(*)
        FROM comment
        WHERE post_id = #{postId}
    </select>
    
    <select id="totalCountByMemberId" resultType="int">
        SELECT COUNT(*)
        FROM comment
        WHERE member_id = #{memberId}
    </select>

    <select id="findAll" resultType="Comment">
        SELECT comment_id, post_id, member_id, writing_date, last_edit_date, comment_Content
        FROM comment
    </select>

    <select id="findByPostIdAll" resultType="Comment">
        SELECT comment_id, post_id, member_id, writing_date, last_edit_date, comment_Content
        FROM comment
        WHERE post_id = #{postId}
        <include refid="sorting"/>
        <include refid="paging"/>
    </select>

    <select id="findByMemberIdAll" resultType="Comment">
        SELECT comment_id, post_id, member_id, writing_date, last_edit_date, comment_Content
        FROM comment
        WHERE member_id = #{memberId}
        <include refid="paging"/>
    </select>

    <select id="findByCommentId" resultType="Comment">
        SELECT comment_id, post_id, member_id, writing_date, last_edit_date, comment_Content
        FROM comment
        WHERE comment_id = #{commentId}
    </select>

    <delete id="deleteComment">
        DELETE FROM comment
        WHERE comment_id = #{commentId}
    </delete>

    <delete id="deleteAllCommentByPostId">
        DELETE FROM comment
        WHERE post_id = #{postId}
    </delete>

</mapper>
