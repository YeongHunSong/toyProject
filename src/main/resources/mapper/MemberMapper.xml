<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="syh.toyProject.repository.mybatis.MemberMapper">

    <sql id="searchCond">
        <where>
            <if test="searchUsername != null and !searchUsername.equals('')">
                AND
                    M.USERNAME LIKE CONCAT('%', #{searchUsername}, '%')
            </if>
        </where>
    </sql>

    <sql id="sorting">
        <choose>
            <when test="sortingDto != null and sortingDto.sorting == 'DESC'">
                ORDER BY
                    M.SIGNUP_DATE DESC
            </when>
            <otherwise>
                ORDER BY
                    M.SIGNUP_DATE ASC
            </otherwise>
        </choose>
    </sql>

    <sql id="paging">
        <if test="pageDto != null">
            LIMIT
                #{pageDto.pageCount}, #{pageDto.pageView}
        </if>
    </sql>


    <insert id="addMember" useGeneratedKeys="true" keyProperty="memberId">
        INSERT INTO
            MEMBER (SIGNUP_DATE, LOGIN_ID, PASSWORD, USERNAME)
        VALUES
            (now(), #{loginId}, #{password}, #{username})
    </insert>

    <update id="editMember">
        UPDATE
            MEMBER M
        SET
            M.USERNAME = #{memberEditDto.username}
            , M.PASSWORD = #{memberEditDto.password}
        WHERE
            M.MEMBER_ID = #{memberId}
    </update>

    <select id="totalCount" resultType="int">
        SELECT
            COUNT(M.MEMBER_ID)
        FROM
            MEMBER M
        <include refid="searchCond"/>
    </select>

    <select id="findAll" resultType="Member">
        SELECT
            M.SIGNUP_DATE
            , M.USERNAME
            , M.MEMBER_ID
            , M.LOGIN_ID
            , M.PASSWORD
        FROM
            MEMBER M
        <include refid="searchCond"/>
        <include refid="sorting"/>
        <include refid="paging"/>
    </select>

    <select id="findByMemberId" resultType="Member">
        SELECT
            M.SIGNUP_DATE
            , M.USERNAME
            , M.MEMBER_ID
            , M.LOGIN_ID
            , M.PASSWORD
        FROM
            MEMBER M
        WHERE
            M.MEMBER_ID = #{memberId}
    </select>

    <select id="findByLoginId" resultType="Member">
        SELECT
            M.SIGNUP_DATE
            , M.USERNAME
            , M.MEMBER_ID
            , M.LOGIN_ID
            , M.PASSWORD
        FROM
            MEMBER M
        WHERE
            M.LOGIN_ID = #{loginId}
    </select>

</mapper>
